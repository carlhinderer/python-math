-------------------------------------------------
CHAPTER 3 - DESCRIPTIVE STATISTICS
-------------------------------------------------

- Finding the Mean

    def calculate_mean(numbers):
        return sum(numbers) / len(numbers)



- Finding the Median

    def calculate_median(numbers):
        N = len(numbers)
        numbers.sort()
        if N % 2 == 0:
            m1 = N // 2
            m2 = N // 2 - 1
            median = (numbers[m1] + numbers[m2]) / 2
        else:
            m = (N + 1) // 2
            median = numbers[m]
        return median



- Using a 'Counter' object to Find the Element Counts
    
    >>> from collections import Counter
    >>> simple_list = [4, 2, 1, 3, 4]

    >>> c = Counter(simple_list)
    >>> c.most_common()
    [(4, 2), (1, 1), (2, 1), (3, 1)]

    >>> c.most_common(1)
    [(4, 2)]



- Finding the Mode

    from collections import Counter

    def calculate_mode(numbers):
        c = Counter(numbers)
        mode = c.most_common(1)
        return mode[0][0]



- Finding All the Modes 

    from collections import Counter

    def calculate_mode(numbers):
        c = Counter(numbers)
        numbers_freq = c.most_common()
        max_count = numbers_freq[0][1]

        modes = []
        for num in numbers_freq:
            if num[1] == max_count:
                modes.append(num[0])
        return modes



- The new 'statistics' standard library package (3.4+)

    import statistics

    numbers = [1, 2, 5, 7, 4, 9]
    statistics.mean(numbers)
    statistics.median(numbers)
